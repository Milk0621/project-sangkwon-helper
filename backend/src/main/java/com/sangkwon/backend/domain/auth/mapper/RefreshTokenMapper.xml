<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sangkwon.backend.domain.auth.mapper.mybatis.RefreshTokenMapper">
	
	<!-- 저장: 회전할 때마다 "새 행"을 추가 -->
	<insert id="saveRefreshToken">
		INSERT INTO refresh_token (email, token, jti, revoked, replaced_by_jti, expires_at, created_at)
		VALUES (#{email}, #{token}, #{jti}, 0, NULL, #{expiresAt}, #{now})
	</insert>
	
	<!-- jti 기준 조회 -->
	<select id="findRefreshByJti" resultType="com.sangkwon.backend.domain.auth.entity.RefreshToken">
		SELECT * FROM refresh_token WHERE jti = #{jti}
	</select>
	
	<!-- 회전/로그아웃 등으로 무효화 -->
	<update id="revokeByJti">
		UPDATE refresh_token
		SET revoked = 1,
		    replaced_by_jti = #{replacedByJti}
		WHERE jti = #{jti}
	</update>
	
	<!-- 사용자 전체 무효화(강제 로그아웃 등) -->
	<update id="revokeAllByEmail">
		UPDATE refresh_token
		SET revoked = 1
		WHERE email = #{email} AND revoked = 0
	</update>
	

	<!-- 만료 청소(선택) -->
	<delete id="deleteExpiredRefreshTokens">
		DELETE FROM refresh_token
		WHERE expires_at <![CDATA[<]]> #{now}
	</delete>	
	
	<insert id="insertBlacklistedToken">
	    insert into token_blacklist (token, expires_at, created_at)
	    values (#{token}, #{expiresAt}, #{now})
	</insert>
	
	<select id="isTokenBlacklisted" resultType="int">
	    select case when count(*) > 0 then 1 else 0 end
	    from token_blacklist
	    where token = #{token}	
    </select>
	
</mapper>